0: cmsgpu001.ihep.ac.cn
GPU 0: NVIDIA A100-PCIE-40GB (UUID: GPU-83673d1f-01b2-490d-5bc6-a84aaf3ddc65)
Allocate GPU cards : 0

modinfo:
filename:       /lib/modules/3.10.0-1160.71.1.el7.x86_64/extra/nvidia.ko.xz
firmware:       nvidia/515.65.01/gsp.bin
alias:          char-major-195-*
version:        515.65.01
supported:      external
license:        NVIDIA
retpoline:      Y
rhelversion:    7.9
srcversion:     8049D44E2C1B08F41E1B8A6
alias:          pci:v000010DEd*sv*sd*bc06sc80i00*
alias:          pci:v000010DEd*sv*sd*bc03sc02i00*
alias:          pci:v000010DEd*sv*sd*bc03sc00i00*
depends:        drm
vermagic:       3.10.0-1160.71.1.el7.x86_64 SMP mod_unload modversions 
signer:         DKMS module signing key
sig_key:        9B:9E:55:A9:86:D9:50:0B:6D:2D:9F:BA:A7:E6:45:39:D4:DD:5F:C6
sig_hashalgo:   sha512
parm:           NvSwitchRegDwords:NvSwitch regkey (charp)
parm:           NvSwitchBlacklist:NvSwitchBlacklist=uuid[,uuid...] (charp)
parm:           NVreg_ResmanDebugLevel:int
parm:           NVreg_RmLogonRC:int
parm:           NVreg_ModifyDeviceFiles:int
parm:           NVreg_DeviceFileUID:int
parm:           NVreg_DeviceFileGID:int
parm:           NVreg_DeviceFileMode:int
parm:           NVreg_InitializeSystemMemoryAllocations:int
parm:           NVreg_UsePageAttributeTable:int
parm:           NVreg_EnablePCIeGen3:int
parm:           NVreg_EnableMSI:int
parm:           NVreg_TCEBypassMode:int
parm:           NVreg_EnableStreamMemOPs:int
parm:           NVreg_RestrictProfilingToAdminUsers:int
parm:           NVreg_PreserveVideoMemoryAllocations:int
parm:           NVreg_EnableS0ixPowerManagement:int
parm:           NVreg_S0ixPowerManagementVideoMemoryThreshold:int
parm:           NVreg_DynamicPowerManagement:int
parm:           NVreg_DynamicPowerManagementVideoMemoryThreshold:int
parm:           NVreg_EnableGpuFirmware:int
parm:           NVreg_EnableGpuFirmwareLogs:int
parm:           NVreg_OpenRmEnableUnsupportedGpus:int
parm:           NVreg_EnableUserNUMAManagement:int
parm:           NVreg_MemoryPoolSize:int
parm:           NVreg_KMallocHeapMaxSize:int
parm:           NVreg_VMallocHeapMaxSize:int
parm:           NVreg_IgnoreMMIOCheck:int
parm:           NVreg_NvLinkDisable:int
parm:           NVreg_EnablePCIERelaxedOrderingMode:int
parm:           NVreg_RegisterPCIDriver:int
parm:           NVreg_EnableDbgBreakpoint:int
parm:           NVreg_RegistryDwords:charp
parm:           NVreg_RegistryDwordsPerDevice:charp
parm:           NVreg_RmMsg:charp
parm:           NVreg_GpuBlacklist:charp
parm:           NVreg_TemporaryFilePath:charp
parm:           NVreg_ExcludedGpus:charp
parm:           NVreg_DmaRemapPeerMmio:int
parm:           rm_firmware_active:charp

nvidia-smi:
Mon Aug 29 14:35:32 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 515.65.01    Driver Version: 515.65.01    CUDA Version: 11.7     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-PCI...  On   | 00000000:3B:00.0 Off |                    0 |
| N/A   22C    P0    32W / 250W |      0MiB / 40960MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+

nvcc --version:
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Sun_Mar_21_19:15:46_PDT_2021
Cuda compilation tools, release 11.3, V11.3.58
Build cuda_11.3.r11.3/compiler.29745058_0

 torch version: 1.10.2

 cuda version: 11.3

 is cuda available: True

 CUDNN VERSION: 8200

 Number CUDA Devices: 1

 CUDA Device Name: NVIDIA A100-PCIE-40GB

 CUDA Device Total Memory [GB]: 42.358472704

 Device capability: (8, 0) 

 Cuda deviice: <torch.cuda.device object at 0x2b68ebb7d8e0> 

 Is cuda initialized: True

 CUDA_HOME: /hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1

real	0m4.726s
user	0m2.516s
sys	0m1.158s
/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/cupy/_environment.py:438: UserWarning: 
--------------------------------------------------------------------------------

  CuPy may not function correctly because multiple CuPy packages are installed
  in your environment:

    cupy, cupy-cuda110

  Follow these steps to resolve this issue:

    1. For all packages listed above, run the following command to remove all
       existing CuPy installations:

         $ pip uninstall <package_name>

      If you previously installed CuPy via conda, also run the following:

         $ conda uninstall cupy

    2. Install the appropriate CuPy package.
       Refer to the Installation Guide for detailed instructions.

         https://docs.cupy.dev/en/stable/install.html

--------------------------------------------------------------------------------

  warnings.warn(f'''
/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/torch/nn/functional.py:1806: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")




 The Network ... 







 Loading data ... 



training set shape (20000, 43, 288) 
sum 5279207

target set shape (20000, 6796) 
sum 4575851
Net(
  (conv1): Conv2d(1, 256, kernel_size=(3, 3), stride=(1, 1))
  (conv2): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1))
  (conv3): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1))
  (fc1): Linear(in_features=667776, out_features=256, bias=True)
  (fc2): Linear(in_features=256, out_features=128, bias=True)
  (fc3): Linear(in_features=128, out_features=64, bias=True)
  (fc4): Linear(in_features=64, out_features=6796, bias=True)
)

number of the free parameters: 171805196
parameters of the network conv1.weight 
 torch.Size([256, 1, 3, 3]) 
 True 
 tensor([[[[ 0.2356, -0.2817,  0.0388],
          [-0.0556, -0.2485, -0.2216],
          [-0.1611,  0.3241, -0.1670]]],


        [[[-0.0039,  0.1880, -0.0010],
          [-0.1892, -0.1880, -0.1577],
          [-0.0457,  0.2505,  0.2720]]],


        [[[ 0.2002, -0.1062,  0.2634],
          [-0.2337, -0.1041, -0.0735],
          [-0.2689, -0.0648,  0.0665]]],


        ...,


        [[[-0.1663, -0.1608,  0.3137],
          [ 0.0526, -0.0173,  0.0449],
          [-0.2788,  0.0588, -0.2352]]],


        [[[-0.2648,  0.1230, -0.2580],
          [ 0.2602,  0.2776, -0.0066],
          [ 0.0533,  0.1050, -0.0308]]],


        [[[ 0.1164,  0.2435,  0.1884],
          [ 0.2856,  0.0857, -0.2110],
          [-0.1495, -0.0328,  0.1053]]]], device='cuda:0') 
 Parameter containing:
tensor([[[[ 0.2356, -0.2817,  0.0388],
          [-0.0556, -0.2485, -0.2216],
          [-0.1611,  0.3241, -0.1670]]],


        [[[-0.0039,  0.1880, -0.0010],
          [-0.1892, -0.1880, -0.1577],
          [-0.0457,  0.2505,  0.2720]]],


        [[[ 0.2002, -0.1062,  0.2634],
          [-0.2337, -0.1041, -0.0735],
          [-0.2689, -0.0648,  0.0665]]],


        ...,


        [[[-0.1663, -0.1608,  0.3137],
          [ 0.0526, -0.0173,  0.0449],
          [-0.2788,  0.0588, -0.2352]]],


        [[[-0.2648,  0.1230, -0.2580],
          [ 0.2602,  0.2776, -0.0066],
          [ 0.0533,  0.1050, -0.0308]]],


        [[[ 0.1164,  0.2435,  0.1884],
          [ 0.2856,  0.0857, -0.2110],
          [-0.1495, -0.0328,  0.1053]]]], device='cuda:0', requires_grad=True)
parameters of the network conv1.bias 
 torch.Size([256]) 
 True 
 tensor([-1.1996e-01,  9.9154e-02, -2.5898e-01,  2.4008e-01,  2.4121e-01,
        -1.9608e-01,  1.9395e-01,  1.9968e-01, -3.0767e-02,  2.8099e-01,
         3.0558e-01,  3.3057e-01, -2.8899e-01,  9.8347e-02, -9.9089e-02,
        -3.1008e-01,  4.5013e-02,  8.2771e-02, -1.0451e-01, -2.6540e-01,
         3.1672e-01, -5.8702e-02, -2.7419e-01,  3.1262e-01,  7.7147e-02,
        -2.2150e-01, -6.0930e-02, -1.4710e-01,  6.4340e-02, -2.7433e-01,
        -5.6271e-02, -2.8853e-01, -2.1570e-01, -3.4209e-02,  3.8776e-02,
        -1.8736e-01,  4.2252e-02,  2.6966e-01, -4.9126e-02,  2.1998e-02,
         3.7245e-02,  3.0682e-01,  3.1939e-01,  2.9263e-01, -2.5171e-02,
         2.8847e-01,  2.0858e-01, -1.6441e-01, -3.2815e-01,  1.9606e-02,
        -2.7103e-01,  2.4171e-01,  1.8775e-01,  2.3938e-02, -2.7078e-01,
         1.8100e-01, -2.6849e-01, -2.7081e-01,  8.1152e-02,  2.8753e-01,
        -2.2610e-01, -1.0962e-01, -3.0029e-01,  3.1776e-02,  9.2140e-03,
         2.9895e-02, -5.9960e-02, -1.4453e-01,  2.0761e-01,  4.4312e-02,
        -2.2681e-01, -1.1993e-01,  1.4356e-01,  2.2644e-02,  1.9554e-01,
         6.6157e-02, -2.9057e-01, -1.0813e-01, -2.4364e-01, -1.3549e-01,
        -3.0086e-01,  1.4497e-01,  2.6599e-01, -1.6152e-01,  2.6479e-01,
        -3.8092e-03,  1.8186e-02, -3.1763e-02,  2.0808e-01,  4.4984e-02,
        -1.1279e-01,  1.8122e-01, -9.8889e-02, -1.7550e-01,  2.4744e-01,
         1.7735e-01,  6.7744e-02, -3.0051e-01, -2.1281e-01, -1.5577e-01,
         3.0183e-01, -4.9623e-02, -6.2594e-02,  2.1287e-02, -1.0187e-01,
         9.1366e-02, -5.8449e-02,  9.6980e-03, -2.4522e-01, -1.3493e-01,
         1.9723e-02,  2.6827e-01,  3.2139e-02, -1.1691e-01, -8.7731e-02,
         1.1762e-02, -2.5786e-01,  1.9051e-02, -4.2862e-02,  4.7054e-02,
         3.0198e-01,  3.3272e-01,  3.3331e-02,  8.8860e-02, -2.8399e-01,
        -1.0021e-01, -2.0597e-01,  7.9772e-02, -2.8398e-01,  1.4177e-01,
        -2.2548e-01,  3.2917e-01,  3.3307e-01,  1.7294e-01,  3.3170e-01,
         1.8825e-01, -2.9676e-03, -7.6313e-02,  6.8963e-03,  2.5578e-01,
        -2.9926e-02,  2.2527e-01, -2.9547e-01, -1.3187e-01, -2.8982e-01,
        -1.7485e-01, -3.2449e-01,  3.1896e-01, -2.0537e-01, -1.7070e-01,
        -2.7704e-01,  2.7861e-02, -1.6668e-01,  3.1055e-01, -7.4317e-02,
         2.3694e-01,  1.0592e-01, -2.2393e-01, -8.9572e-02,  3.1457e-01,
        -2.0545e-01,  6.4924e-02,  2.3899e-01,  9.1381e-02, -3.2810e-01,
        -7.4013e-02,  1.3685e-01, -2.7817e-01, -1.7348e-01, -2.1059e-01,
        -1.8038e-01,  7.3151e-02, -1.3537e-01, -1.3201e-02, -1.2094e-01,
         1.4106e-01,  8.8786e-02,  2.4210e-01, -3.1187e-01,  3.1886e-01,
        -2.9386e-01, -5.3247e-06,  1.6210e-01,  2.4474e-01, -9.6575e-02,
        -2.9069e-01,  2.3848e-01,  2.7124e-01,  2.9801e-01, -3.1006e-01,
        -2.0698e-01, -2.1148e-01,  2.0581e-01,  1.6734e-01, -1.5403e-01,
        -8.9250e-02,  7.4943e-02, -3.2048e-01, -2.0913e-01, -2.9679e-01,
         1.3278e-01,  2.7891e-01,  1.0129e-01, -1.9354e-01,  1.3021e-01,
         8.3555e-02, -2.1671e-01, -2.4141e-02,  2.0238e-01, -2.3983e-01,
         6.7374e-02,  1.4402e-01, -2.4733e-01,  2.2522e-01, -2.5699e-01,
        -2.6793e-01,  1.5893e-01, -2.2814e-01,  2.6591e-01,  3.1670e-01,
        -1.9038e-01, -3.2161e-01,  1.7659e-01, -3.8479e-02, -3.0967e-01,
        -2.4733e-02,  2.5431e-01, -3.7913e-02,  2.0035e-01,  1.3012e-02,
        -2.1136e-01,  1.0481e-01, -2.5641e-01,  2.8605e-01,  7.4661e-02,
        -1.7532e-01, -4.6209e-02,  8.3419e-02,  4.1931e-02,  3.1047e-01,
         1.3173e-01, -2.2302e-02, -3.5489e-02, -1.8072e-01, -4.5834e-02,
         1.9487e-01,  5.2013e-02,  1.7832e-01, -2.9873e-01,  1.2267e-01,
        -2.2839e-01, -1.9141e-02, -7.1930e-02,  2.6647e-01,  2.3623e-01,
         1.1142e-01], device='cuda:0') 
 Parameter containing:
tensor([-1.1996e-01,  9.9154e-02, -2.5898e-01,  2.4008e-01,  2.4121e-01,
        -1.9608e-01,  1.9395e-01,  1.9968e-01, -3.0767e-02,  2.8099e-01,
         3.0558e-01,  3.3057e-01, -2.8899e-01,  9.8347e-02, -9.9089e-02,
        -3.1008e-01,  4.5013e-02,  8.2771e-02, -1.0451e-01, -2.6540e-01,
         3.1672e-01, -5.8702e-02, -2.7419e-01,  3.1262e-01,  7.7147e-02,
        -2.2150e-01, -6.0930e-02, -1.4710e-01,  6.4340e-02, -2.7433e-01,
        -5.6271e-02, -2.8853e-01, -2.1570e-01, -3.4209e-02,  3.8776e-02,
        -1.8736e-01,  4.2252e-02,  2.6966e-01, -4.9126e-02,  2.1998e-02,
         3.7245e-02,  3.0682e-01,  3.1939e-01,  2.9263e-01, -2.5171e-02,
         2.8847e-01,  2.0858e-01, -1.6441e-01, -3.2815e-01,  1.9606e-02,
        -2.7103e-01,  2.4171e-01,  1.8775e-01,  2.3938e-02, -2.7078e-01,
         1.8100e-01, -2.6849e-01, -2.7081e-01,  8.1152e-02,  2.8753e-01,
        -2.2610e-01, -1.0962e-01, -3.0029e-01,  3.1776e-02,  9.2140e-03,
         2.9895e-02, -5.9960e-02, -1.4453e-01,  2.0761e-01,  4.4312e-02,
        -2.2681e-01, -1.1993e-01,  1.4356e-01,  2.2644e-02,  1.9554e-01,
         6.6157e-02, -2.9057e-01, -1.0813e-01, -2.4364e-01, -1.3549e-01,
        -3.0086e-01,  1.4497e-01,  2.6599e-01, -1.6152e-01,  2.6479e-01,
        -3.8092e-03,  1.8186e-02, -3.1763e-02,  2.0808e-01,  4.4984e-02,
        -1.1279e-01,  1.8122e-01, -9.8889e-02, -1.7550e-01,  2.4744e-01,
         1.7735e-01,  6.7744e-02, -3.0051e-01, -2.1281e-01, -1.5577e-01,
         3.0183e-01, -4.9623e-02, -6.2594e-02,  2.1287e-02, -1.0187e-01,
         9.1366e-02, -5.8449e-02,  9.6980e-03, -2.4522e-01, -1.3493e-01,
         1.9723e-02,  2.6827e-01,  3.2139e-02, -1.1691e-01, -8.7731e-02,
         1.1762e-02, -2.5786e-01,  1.9051e-02, -4.2862e-02,  4.7054e-02,
         3.0198e-01,  3.3272e-01,  3.3331e-02,  8.8860e-02, -2.8399e-01,
        -1.0021e-01, -2.0597e-01,  7.9772e-02, -2.8398e-01,  1.4177e-01,
        -2.2548e-01,  3.2917e-01,  3.3307e-01,  1.7294e-01,  3.3170e-01,
         1.8825e-01, -2.9676e-03, -7.6313e-02,  6.8963e-03,  2.5578e-01,
        -2.9926e-02,  2.2527e-01, -2.9547e-01, -1.3187e-01, -2.8982e-01,
        -1.7485e-01, -3.2449e-01,  3.1896e-01, -2.0537e-01, -1.7070e-01,
        -2.7704e-01,  2.7861e-02, -1.6668e-01,  3.1055e-01, -7.4317e-02,
         2.3694e-01,  1.0592e-01, -2.2393e-01, -8.9572e-02,  3.1457e-01,
        -2.0545e-01,  6.4924e-02,  2.3899e-01,  9.1381e-02, -3.2810e-01,
        -7.4013e-02,  1.3685e-01, -2.7817e-01, -1.7348e-01, -2.1059e-01,
        -1.8038e-01,  7.3151e-02, -1.3537e-01, -1.3201e-02, -1.2094e-01,
         1.4106e-01,  8.8786e-02,  2.4210e-01, -3.1187e-01,  3.1886e-01,
        -2.9386e-01, -5.3247e-06,  1.6210e-01,  2.4474e-01, -9.6575e-02,
        -2.9069e-01,  2.3848e-01,  2.7124e-01,  2.9801e-01, -3.1006e-01,
        -2.0698e-01, -2.1148e-01,  2.0581e-01,  1.6734e-01, -1.5403e-01,
        -8.9250e-02,  7.4943e-02, -3.2048e-01, -2.0913e-01, -2.9679e-01,
         1.3278e-01,  2.7891e-01,  1.0129e-01, -1.9354e-01,  1.3021e-01,
         8.3555e-02, -2.1671e-01, -2.4141e-02,  2.0238e-01, -2.3983e-01,
         6.7374e-02,  1.4402e-01, -2.4733e-01,  2.2522e-01, -2.5699e-01,
        -2.6793e-01,  1.5893e-01, -2.2814e-01,  2.6591e-01,  3.1670e-01,
        -1.9038e-01, -3.2161e-01,  1.7659e-01, -3.8479e-02, -3.0967e-01,
        -2.4733e-02,  2.5431e-01, -3.7913e-02,  2.0035e-01,  1.3012e-02,
        -2.1136e-01,  1.0481e-01, -2.5641e-01,  2.8605e-01,  7.4661e-02,
        -1.7532e-01, -4.6209e-02,  8.3419e-02,  4.1931e-02,  3.1047e-01,
         1.3173e-01, -2.2302e-02, -3.5489e-02, -1.8072e-01, -4.5834e-02,
         1.9487e-01,  5.2013e-02,  1.7832e-01, -2.9873e-01,  1.2267e-01,
        -2.2839e-01, -1.9141e-02, -7.1930e-02,  2.6647e-01,  2.3623e-01,
         1.1142e-01], device='cuda:0', requires_grad=True)
parameters of the network conv2.weight 
 torch.Size([128, 256, 3, 3]) 
 True 
 tensor([[[[ 1.0919e-02,  8.4574e-03,  1.8674e-02],
          [ 6.9473e-03,  1.9321e-02,  1.2381e-02],
          [-1.4054e-02,  9.2071e-03, -1.2032e-02]],

         [[ 4.7557e-03,  1.1534e-02,  5.7042e-03],
          [ 1.7604e-02,  1.7435e-02,  9.8656e-03],
          [-5.1866e-03,  7.9031e-03,  1.2618e-02]],

         [[ 1.8865e-02, -8.5546e-03, -6.9920e-03],
          [ 3.8315e-03,  1.5477e-02,  8.3831e-03],
          [-7.0687e-03,  2.2634e-03, -5.8232e-03]],

         ...,

         [[-5.5207e-03,  8.2662e-03,  1.9899e-03],
          [-1.4718e-02,  8.1119e-03, -2.0056e-02],
          [-1.2861e-02,  3.6395e-03, -1.2609e-02]],

         [[-6.1456e-03, -1.2291e-02, -8.1630e-03],
          [-1.4370e-02, -2.0134e-02,  1.0925e-02],
          [-1.2640e-02, -5.6585e-04, -3.8923e-03]],

         [[ 1.7966e-02,  1.6270e-02,  1.6770e-02],
          [ 1.6497e-02, -5.3862e-03,  1.2396e-02],
          [ 1.6408e-02, -9.4960e-03, -1.2515e-02]]],


        [[[ 8.2228e-03, -7.0048e-03, -6.3551e-05],
          [ 2.0103e-02, -1.3407e-02,  1.5367e-02],
          [-1.0025e-02, -1.6307e-02,  1.3315e-02]],

         [[ 1.0783e-02, -4.8389e-03, -1.2983e-02],
          [-3.2003e-03,  1.1559e-02, -4.5350e-03],
          [-1.7812e-02, -3.7856e-03, -1.0615e-02]],

         [[ 1.8755e-02, -1.2492e-02,  1.2320e-02],
          [ 2.0730e-02, -3.3065e-03,  1.4876e-02],
          [-1.5662e-02, -3.1090e-03, -4.2185e-03]],

         ...,

         [[ 1.4593e-02,  1.6036e-03,  1.8438e-02],
          [ 1.6792e-02,  8.4806e-04,  1.5112e-02],
          [ 1.7506e-02,  1.7440e-02, -1.6560e-02]],

         [[ 4.7515e-03, -1.6697e-02,  9.2206e-03],
          [-7.7476e-03, -1.7195e-03,  1.0065e-04],
          [ 1.3940e-02, -1.9141e-02, -6.2709e-03]],

         [[-1.1109e-03,  1.7512e-02,  2.0939e-03],
          [-1.0870e-02, -1.6175e-02, -2.7252e-03],
          [-1.0250e-03, -1.9614e-02, -2.0342e-02]]],


        [[[ 1.5319e-02, -3.8162e-04, -1.2152e-02],
          [-1.1769e-02,  7.4772e-03, -1.5904e-02],
          [ 1.5225e-02,  8.8901e-03,  1.0236e-02]],

         [[-2.0124e-02,  2.7675e-03, -8.9118e-03],
          [-1.7947e-02,  1.6461e-02,  4.2281e-03],
          [ 5.7921e-03, -2.6045e-03, -1.0825e-02]],

         [[-1.5287e-02,  5.2098e-03, -5.5910e-03],
          [ 6.3360e-03,  1.0697e-02,  3.0297e-05],
          [-8.6578e-03,  5.6348e-03,  1.0131e-02]],

         ...,

         [[-1.3099e-02,  8.2785e-03,  1.6946e-02],
          [-1.2349e-02, -6.5024e-03,  1.4120e-02],
          [ 2.0359e-02, -1.7704e-02, -1.9862e-02]],

         [[-1.3954e-02, -1.9782e-02,  7.6557e-03],
          [ 1.9856e-02,  2.9460e-03, -5.2504e-03],
          [ 1.0668e-02,  1.1211e-04, -3.9911e-03]],

         [[ 1.3739e-02, -3.4426e-03,  1.7904e-02],
          [-2.1127e-03, -4.0145e-03, -4.3174e-03],
          [-2.0345e-02,  3.7370e-03,  1.9353e-02]]],


        ...,


        [[[ 1.2798e-02,  2.1947e-03, -2.6311e-03],
          [ 3.0506e-03, -3.4796e-03, -5.4901e-03],
          [ 6.0771e-03, -1.9890e-02,  3.6214e-03]],

         [[-1.0488e-02, -1.4922e-02, -2.0665e-02],
          [ 5.9120e-03, -7.6963e-03,  2.9951e-03],
          [-2.7041e-03,  1.8866e-02,  1.1006e-02]],

         [[ 1.0604e-02, -1.3316e-02,  1.7004e-02],
          [-1.9645e-02, -1.8853e-02, -3.0549e-03],
          [-8.9222e-03,  9.6192e-03,  4.9192e-04]],

         ...,

         [[-5.0330e-03,  1.1010e-02, -7.5965e-03],
          [ 1.2484e-03,  1.2600e-03,  4.2704e-03],
          [ 2.4903e-03, -2.0541e-02, -7.2895e-03]],

         [[ 1.4957e-02, -8.9847e-04,  7.6936e-03],
          [ 4.7444e-03,  1.4204e-02, -1.0008e-02],
          [ 1.9825e-02,  1.6844e-02, -1.0093e-02]],

         [[-1.8330e-02,  8.4206e-03, -9.1543e-04],
          [ 1.1518e-02,  1.0844e-02, -1.3628e-02],
          [-1.5249e-02, -1.4516e-02,  1.7340e-02]]],


        [[[-3.1386e-03, -6.7080e-04,  3.1855e-03],
          [ 7.2571e-04,  1.4337e-03, -1.6105e-02],
          [ 2.1439e-03,  1.7568e-03,  1.4555e-03]],

         [[ 1.8852e-02,  1.9364e-02,  2.7381e-03],
          [-2.3285e-03, -1.5032e-02,  3.0671e-03],
          [-1.8898e-02,  7.0110e-03, -9.7361e-03]],

         [[-4.0206e-03, -9.0429e-03, -1.7580e-02],
          [ 1.8141e-02,  9.9787e-03, -8.3210e-03],
          [ 1.8691e-02, -2.8644e-04,  3.3753e-03]],

         ...,

         [[-2.1346e-03,  4.5668e-03, -1.2605e-02],
          [-2.0065e-02, -7.5380e-03,  1.1962e-02],
          [-2.0232e-02, -1.3316e-02, -6.1196e-03]],

         [[ 1.6532e-02,  1.8114e-03,  3.3894e-03],
          [-1.3969e-02,  1.8883e-02,  1.2280e-02],
          [-2.9848e-03,  7.6719e-03, -6.3746e-03]],

         [[ 5.8302e-03,  3.8875e-03, -1.3466e-02],
          [-1.3248e-02, -1.5314e-02, -1.4480e-02],
          [ 1.8565e-02,  8.3620e-03,  1.2029e-02]]],


        [[[ 1.3944e-02,  1.0726e-02, -9.5892e-03],
          [ 6.5860e-03, -1.6318e-02,  7.7262e-03],
          [-1.9139e-02, -1.4699e-02,  6.5749e-03]],

         [[-1.8822e-02, -1.2602e-02,  1.3902e-02],
          [-1.3815e-02, -1.6484e-02, -9.7464e-03],
          [-5.1601e-03,  1.0179e-02, -4.3425e-03]],

         [[-1.0472e-02,  6.4426e-03, -1.3587e-03],
          [ 1.5747e-02, -9.0609e-03, -1.1336e-02],
          [ 1.0471e-02, -8.0080e-03,  1.3014e-02]],

         ...,

         [[ 2.0514e-02,  1.4725e-02,  1.4465e-02],
          [ 7.5442e-03,  1.9334e-02, -5.9678e-03],
          [-1.4991e-02, -1.7927e-02, -1.2589e-02]],

         [[ 1.8512e-02,  4.1393e-03,  1.5714e-03],
          [-7.4065e-03,  1.2889e-02, -4.4408e-03],
          [ 1.6945e-02,  1.9884e-02,  1.1881e-02]],

         [[ 7.3606e-04, -1.3541e-02, -7.4717e-03],
          [ 1.6239e-02,  9.7726e-03, -1.2538e-02],
          [ 1.8096e-02, -1.9947e-02,  7.6524e-03]]]], device='cuda:0') 
 Parameter containing:
tensor([[[[ 1.0919e-02,  8.4574e-03,  1.8674e-02],
          [ 6.9473e-03,  1.9321e-02,  1.2381e-02],
          [-1.4054e-02,  9.2071e-03, -1.2032e-02]],

         [[ 4.7557e-03,  1.1534e-02,  5.7042e-03],
          [ 1.7604e-02,  1.7435e-02,  9.8656e-03],
          [-5.1866e-03,  7.9031e-03,  1.2618e-02]],

         [[ 1.8865e-02, -8.5546e-03, -6.9920e-03],
          [ 3.8315e-03,  1.5477e-02,  8.3831e-03],
          [-7.0687e-03,  2.2634e-03, -5.8232e-03]],

         ...,

         [[-5.5207e-03,  8.2662e-03,  1.9899e-03],
          [-1.4718e-02,  8.1119e-03, -2.0056e-02],
          [-1.2861e-02,  3.6395e-03, -1.2609e-02]],

         [[-6.1456e-03, -1.2291e-02, -8.1630e-03],
          [-1.4370e-02, -2.0134e-02,  1.0925e-02],
          [-1.2640e-02, -5.6585e-04, -3.8923e-03]],

         [[ 1.7966e-02,  1.6270e-02,  1.6770e-02],
          [ 1.6497e-02, -5.3862e-03,  1.2396e-02],
          [ 1.6408e-02, -9.4960e-03, -1.2515e-02]]],


        [[[ 8.2228e-03, -7.0048e-03, -6.3551e-05],
          [ 2.0103e-02, -1.3407e-02,  1.5367e-02],
          [-1.0025e-02, -1.6307e-02,  1.3315e-02]],

         [[ 1.0783e-02, -4.8389e-03, -1.2983e-02],
          [-3.2003e-03,  1.1559e-02, -4.5350e-03],
          [-1.7812e-02, -3.7856e-03, -1.0615e-02]],

         [[ 1.8755e-02, -1.2492e-02,  1.2320e-02],
          [ 2.0730e-02, -3.3065e-03,  1.4876e-02],
          [-1.5662e-02, -3.1090e-03, -4.2185e-03]],

         ...,

         [[ 1.4593e-02,  1.6036e-03,  1.8438e-02],
          [ 1.6792e-02,  8.4806e-04,  1.5112e-02],
          [ 1.7506e-02,  1.7440e-02, -1.6560e-02]],

         [[ 4.7515e-03, -1.6697e-02,  9.2206e-03],
          [-7.7476e-03, -1.7195e-03,  1.0065e-04],
          [ 1.3940e-02, -1.9141e-02, -6.2709e-03]],

         [[-1.1109e-03,  1.7512e-02,  2.0939e-03],
          [-1.0870e-02, -1.6175e-02, -2.7252e-03],
          [-1.0250e-03, -1.9614e-02, -2.0342e-02]]],


        [[[ 1.5319e-02, -3.8162e-04, -1.2152e-02],
          [-1.1769e-02,  7.4772e-03, -1.5904e-02],
          [ 1.5225e-02,  8.8901e-03,  1.0236e-02]],

         [[-2.0124e-02,  2.7675e-03, -8.9118e-03],
          [-1.7947e-02,  1.6461e-02,  4.2281e-03],
          [ 5.7921e-03, -2.6045e-03, -1.0825e-02]],

         [[-1.5287e-02,  5.2098e-03, -5.5910e-03],
          [ 6.3360e-03,  1.0697e-02,  3.0297e-05],
          [-8.6578e-03,  5.6348e-03,  1.0131e-02]],

         ...,

         [[-1.3099e-02,  8.2785e-03,  1.6946e-02],
          [-1.2349e-02, -6.5024e-03,  1.4120e-02],
          [ 2.0359e-02, -1.7704e-02, -1.9862e-02]],

         [[-1.3954e-02, -1.9782e-02,  7.6557e-03],
          [ 1.9856e-02,  2.9460e-03, -5.2504e-03],
          [ 1.0668e-02,  1.1211e-04, -3.9911e-03]],

         [[ 1.3739e-02, -3.4426e-03,  1.7904e-02],
          [-2.1127e-03, -4.0145e-03, -4.3174e-03],
          [-2.0345e-02,  3.7370e-03,  1.9353e-02]]],


        ...,


        [[[ 1.2798e-02,  2.1947e-03, -2.6311e-03],
          [ 3.0506e-03, -3.4796e-03, -5.4901e-03],
          [ 6.0771e-03, -1.9890e-02,  3.6214e-03]],

         [[-1.0488e-02, -1.4922e-02, -2.0665e-02],
          [ 5.9120e-03, -7.6963e-03,  2.9951e-03],
          [-2.7041e-03,  1.8866e-02,  1.1006e-02]],

         [[ 1.0604e-02, -1.3316e-02,  1.7004e-02],
          [-1.9645e-02, -1.8853e-02, -3.0549e-03],
          [-8.9222e-03,  9.6192e-03,  4.9192e-04]],

         ...,

         [[-5.0330e-03,  1.1010e-02, -7.5965e-03],
          [ 1.2484e-03,  1.2600e-03,  4.2704e-03],
          [ 2.4903e-03, -2.0541e-02, -7.2895e-03]],

         [[ 1.4957e-02, -8.9847e-04,  7.6936e-03],
          [ 4.7444e-03,  1.4204e-02, -1.0008e-02],
          [ 1.9825e-02,  1.6844e-02, -1.0093e-02]],

         [[-1.8330e-02,  8.4206e-03, -9.1543e-04],
          [ 1.1518e-02,  1.0844e-02, -1.3628e-02],
          [-1.5249e-02, -1.4516e-02,  1.7340e-02]]],


        [[[-3.1386e-03, -6.7080e-04,  3.1855e-03],
          [ 7.2571e-04,  1.4337e-03, -1.6105e-02],
          [ 2.1439e-03,  1.7568e-03,  1.4555e-03]],

         [[ 1.8852e-02,  1.9364e-02,  2.7381e-03],
          [-2.3285e-03, -1.5032e-02,  3.0671e-03],
          [-1.8898e-02,  7.0110e-03, -9.7361e-03]],

         [[-4.0206e-03, -9.0429e-03, -1.7580e-02],
          [ 1.8141e-02,  9.9787e-03, -8.3210e-03],
          [ 1.8691e-02, -2.8644e-04,  3.3753e-03]],

         ...,

         [[-2.1346e-03,  4.5668e-03, -1.2605e-02],
          [-2.0065e-02, -7.5380e-03,  1.1962e-02],
          [-2.0232e-02, -1.3316e-02, -6.1196e-03]],

         [[ 1.6532e-02,  1.8114e-03,  3.3894e-03],
          [-1.3969e-02,  1.8883e-02,  1.2280e-02],
          [-2.9848e-03,  7.6719e-03, -6.3746e-03]],

         [[ 5.8302e-03,  3.8875e-03, -1.3466e-02],
          [-1.3248e-02, -1.5314e-02, -1.4480e-02],
          [ 1.8565e-02,  8.3620e-03,  1.2029e-02]]],


        [[[ 1.3944e-02,  1.0726e-02, -9.5892e-03],
          [ 6.5860e-03, -1.6318e-02,  7.7262e-03],
          [-1.9139e-02, -1.4699e-02,  6.5749e-03]],

         [[-1.8822e-02, -1.2602e-02,  1.3902e-02],
          [-1.3815e-02, -1.6484e-02, -9.7464e-03],
          [-5.1601e-03,  1.0179e-02, -4.3425e-03]],

         [[-1.0472e-02,  6.4426e-03, -1.3587e-03],
          [ 1.5747e-02, -9.0609e-03, -1.1336e-02],
          [ 1.0471e-02, -8.0080e-03,  1.3014e-02]],

         ...,

         [[ 2.0514e-02,  1.4725e-02,  1.4465e-02],
          [ 7.5442e-03,  1.9334e-02, -5.9678e-03],
          [-1.4991e-02, -1.7927e-02, -1.2589e-02]],

         [[ 1.8512e-02,  4.1393e-03,  1.5714e-03],
          [-7.4065e-03,  1.2889e-02, -4.4408e-03],
          [ 1.6945e-02,  1.9884e-02,  1.1881e-02]],

         [[ 7.3606e-04, -1.3541e-02, -7.4717e-03],
          [ 1.6239e-02,  9.7726e-03, -1.2538e-02],
          [ 1.8096e-02, -1.9947e-02,  7.6524e-03]]]], device='cuda:0',
       requires_grad=True)
parameters of the network conv2.bias 
 torch.Size([128]) 
 True 
 tensor([-0.0072, -0.0007,  0.0190,  0.0009,  0.0187,  0.0009, -0.0087,  0.0023,
        -0.0142, -0.0163,  0.0161,  0.0036,  0.0087,  0.0145, -0.0024, -0.0112,
        -0.0142, -0.0064,  0.0174, -0.0082,  0.0102, -0.0092,  0.0121, -0.0197,
         0.0046,  0.0012,  0.0204, -0.0075, -0.0077,  0.0046, -0.0005,  0.0172,
        -0.0199,  0.0077, -0.0042, -0.0194,  0.0045, -0.0142, -0.0134,  0.0041,
         0.0106,  0.0006, -0.0154, -0.0078,  0.0205,  0.0207, -0.0205,  0.0011,
        -0.0188,  0.0202,  0.0131, -0.0132, -0.0038, -0.0036, -0.0077, -0.0062,
        -0.0127, -0.0020,  0.0160,  0.0133, -0.0059,  0.0063, -0.0049, -0.0202,
        -0.0083,  0.0162,  0.0081,  0.0077, -0.0128, -0.0042,  0.0035, -0.0041,
        -0.0114,  0.0201,  0.0194, -0.0108, -0.0011, -0.0177,  0.0168,  0.0113,
         0.0105, -0.0076, -0.0118,  0.0055,  0.0050, -0.0117, -0.0012, -0.0003,
         0.0020, -0.0175, -0.0017, -0.0094, -0.0029, -0.0006,  0.0151,  0.0038,
        -0.0020,  0.0077, -0.0118,  0.0031, -0.0002, -0.0110, -0.0193,  0.0060,
         0.0176,  0.0195, -0.0094,  0.0028, -0.0063, -0.0172,  0.0190, -0.0069,
        -0.0143,  0.0051,  0.0035,  0.0147,  0.0171,  0.0017,  0.0192, -0.0159,
        -0.0197,  0.0078, -0.0164,  0.0052, -0.0068, -0.0056, -0.0061, -0.0130],
       device='cuda:0') 
 Parameter containing:
tensor([-0.0072, -0.0007,  0.0190,  0.0009,  0.0187,  0.0009, -0.0087,  0.0023,
        -0.0142, -0.0163,  0.0161,  0.0036,  0.0087,  0.0145, -0.0024, -0.0112,
        -0.0142, -0.0064,  0.0174, -0.0082,  0.0102, -0.0092,  0.0121, -0.0197,
         0.0046,  0.0012,  0.0204, -0.0075, -0.0077,  0.0046, -0.0005,  0.0172,
        -0.0199,  0.0077, -0.0042, -0.0194,  0.0045, -0.0142, -0.0134,  0.0041,
         0.0106,  0.0006, -0.0154, -0.0078,  0.0205,  0.0207, -0.0205,  0.0011,
        -0.0188,  0.0202,  0.0131, -0.0132, -0.0038, -0.0036, -0.0077, -0.0062,
        -0.0127, -0.0020,  0.0160,  0.0133, -0.0059,  0.0063, -0.0049, -0.0202,
        -0.0083,  0.0162,  0.0081,  0.0077, -0.0128, -0.0042,  0.0035, -0.0041,
        -0.0114,  0.0201,  0.0194, -0.0108, -0.0011, -0.0177,  0.0168,  0.0113,
         0.0105, -0.0076, -0.0118,  0.0055,  0.0050, -0.0117, -0.0012, -0.0003,
         0.0020, -0.0175, -0.0017, -0.0094, -0.0029, -0.0006,  0.0151,  0.0038,
        -0.0020,  0.0077, -0.0118,  0.0031, -0.0002, -0.0110, -0.0193,  0.0060,
         0.0176,  0.0195, -0.0094,  0.0028, -0.0063, -0.0172,  0.0190, -0.0069,
        -0.0143,  0.0051,  0.0035,  0.0147,  0.0171,  0.0017,  0.0192, -0.0159,
        -0.0197,  0.0078, -0.0164,  0.0052, -0.0068, -0.0056, -0.0061, -0.0130],
       device='cuda:0', requires_grad=True)
parameters of the network conv3.weight 
 torch.Size([64, 128, 3, 3]) 
 True 
 tensor([[[[ 0.0033, -0.0117, -0.0293],
          [ 0.0211,  0.0230, -0.0058],
          [ 0.0006, -0.0286, -0.0041]],

         [[-0.0097,  0.0080,  0.0020],
          [-0.0216,  0.0100, -0.0162],
          [-0.0283, -0.0124,  0.0289]],

         [[-0.0105,  0.0148,  0.0148],
          [ 0.0016, -0.0010,  0.0115],
          [ 0.0294,  0.0219, -0.0147]],

         ...,

         [[ 0.0226,  0.0122,  0.0073],
          [-0.0199, -0.0123, -0.0170],
          [-0.0027,  0.0223,  0.0043]],

         [[-0.0060,  0.0178, -0.0025],
          [-0.0156,  0.0094,  0.0098],
          [-0.0205,  0.0256, -0.0209]],

         [[-0.0123,  0.0061,  0.0150],
          [ 0.0109, -0.0254, -0.0236],
          [ 0.0153,  0.0094, -0.0216]]],


        [[[-0.0106,  0.0294, -0.0058],
          [ 0.0129, -0.0005, -0.0189],
          [-0.0077,  0.0146, -0.0227]],

         [[-0.0091,  0.0282, -0.0085],
          [ 0.0079,  0.0022,  0.0020],
          [-0.0293, -0.0226,  0.0165]],

         [[-0.0181,  0.0235, -0.0256],
          [ 0.0227, -0.0195,  0.0176],
          [-0.0233, -0.0038,  0.0094]],

         ...,

         [[-0.0284,  0.0259, -0.0279],
          [ 0.0205,  0.0069, -0.0270],
          [-0.0129,  0.0204, -0.0240]],

         [[ 0.0018, -0.0057,  0.0034],
          [-0.0162, -0.0211, -0.0169],
          [ 0.0234,  0.0018, -0.0021]],

         [[ 0.0260,  0.0260,  0.0292],
          [-0.0160, -0.0016, -0.0166],
          [ 0.0028,  0.0247, -0.0246]]],


        [[[-0.0165,  0.0059, -0.0036],
          [-0.0013, -0.0157,  0.0205],
          [-0.0119,  0.0196, -0.0023]],

         [[-0.0176,  0.0253,  0.0012],
          [-0.0260, -0.0063,  0.0135],
          [ 0.0082,  0.0258,  0.0113]],

         [[ 0.0293, -0.0288, -0.0283],
          [ 0.0142,  0.0089, -0.0072],
          [-0.0269, -0.0181, -0.0267]],

         ...,

         [[-0.0135,  0.0115,  0.0202],
          [ 0.0055,  0.0260, -0.0036],
          [-0.0057, -0.0032,  0.0250]],

         [[-0.0113,  0.0042, -0.0097],
          [-0.0070,  0.0202,  0.0172],
          [ 0.0160, -0.0180, -0.0260]],

         [[ 0.0083,  0.0221, -0.0098],
          [ 0.0003, -0.0254, -0.0198],
          [-0.0162,  0.0057, -0.0020]]],


        ...,


        [[[ 0.0169, -0.0013, -0.0112],
          [ 0.0133,  0.0193, -0.0112],
          [-0.0033, -0.0132,  0.0160]],

         [[ 0.0047, -0.0133,  0.0229],
          [-0.0220,  0.0183, -0.0128],
          [ 0.0022,  0.0286, -0.0045]],

         [[ 0.0096,  0.0287,  0.0134],
          [ 0.0117,  0.0035,  0.0205],
          [ 0.0081,  0.0002, -0.0162]],

         ...,

         [[-0.0002, -0.0180,  0.0148],
          [ 0.0061,  0.0125,  0.0242],
          [ 0.0264, -0.0047, -0.0005]],

         [[-0.0104, -0.0159,  0.0065],
          [-0.0179,  0.0089,  0.0175],
          [ 0.0174,  0.0091,  0.0230]],

         [[ 0.0185,  0.0011,  0.0270],
          [-0.0271,  0.0022,  0.0024],
          [-0.0117, -0.0103,  0.0164]]],


        [[[-0.0189, -0.0124, -0.0061],
          [-0.0011,  0.0229, -0.0225],
          [-0.0145, -0.0117, -0.0054]],

         [[-0.0208,  0.0079, -0.0060],
          [ 0.0120,  0.0253,  0.0022],
          [-0.0111,  0.0174, -0.0201]],

         [[-0.0097,  0.0275, -0.0045],
          [ 0.0040, -0.0260,  0.0116],
          [ 0.0236,  0.0226,  0.0025]],

         ...,

         [[ 0.0127, -0.0224,  0.0199],
          [-0.0104, -0.0294,  0.0151],
          [ 0.0219,  0.0174,  0.0167]],

         [[-0.0023, -0.0035,  0.0217],
          [ 0.0288, -0.0198,  0.0191],
          [-0.0036, -0.0234,  0.0079]],

         [[ 0.0161, -0.0229,  0.0197],
          [-0.0069, -0.0265, -0.0058],
          [ 0.0068,  0.0209,  0.0118]]],


        [[[-0.0003,  0.0181, -0.0269],
          [ 0.0027,  0.0155,  0.0074],
          [ 0.0050,  0.0124,  0.0259]],

         [[ 0.0255,  0.0146, -0.0278],
          [-0.0050,  0.0013, -0.0053],
          [ 0.0121,  0.0143,  0.0068]],

         [[-0.0292,  0.0137,  0.0094],
          [-0.0274, -0.0097, -0.0209],
          [ 0.0156, -0.0016,  0.0235]],

         ...,

         [[ 0.0004,  0.0022,  0.0031],
          [-0.0066, -0.0212, -0.0138],
          [ 0.0005, -0.0273,  0.0216]],

         [[ 0.0194,  0.0198,  0.0067],
          [ 0.0260, -0.0184,  0.0059],
          [ 0.0283, -0.0011,  0.0293]],

         [[-0.0216,  0.0242, -0.0223],
          [ 0.0222,  0.0165,  0.0077],
          [ 0.0035,  0.0010, -0.0003]]]], device='cuda:0') 
 Parameter containing:
tensor([[[[ 0.0033, -0.0117, -0.0293],
          [ 0.0211,  0.0230, -0.0058],
          [ 0.0006, -0.0286, -0.0041]],

         [[-0.0097,  0.0080,  0.0020],
          [-0.0216,  0.0100, -0.0162],
          [-0.0283, -0.0124,  0.0289]],

         [[-0.0105,  0.0148,  0.0148],
          [ 0.0016, -0.0010,  0.0115],
          [ 0.0294,  0.0219, -0.0147]],

         ...,

         [[ 0.0226,  0.0122,  0.0073],
          [-0.0199, -0.0123, -0.0170],
          [-0.0027,  0.0223,  0.0043]],

         [[-0.0060,  0.0178, -0.0025],
          [-0.0156,  0.0094,  0.0098],
          [-0.0205,  0.0256, -0.0209]],

         [[-0.0123,  0.0061,  0.0150],
          [ 0.0109, -0.0254, -0.0236],
          [ 0.0153,  0.0094, -0.0216]]],


        [[[-0.0106,  0.0294, -0.0058],
          [ 0.0129, -0.0005, -0.0189],
          [-0.0077,  0.0146, -0.0227]],

         [[-0.0091,  0.0282, -0.0085],
          [ 0.0079,  0.0022,  0.0020],
          [-0.0293, -0.0226,  0.0165]],

         [[-0.0181,  0.0235, -0.0256],
          [ 0.0227, -0.0195,  0.0176],
          [-0.0233, -0.0038,  0.0094]],

         ...,

         [[-0.0284,  0.0259, -0.0279],
          [ 0.0205,  0.0069, -0.0270],
          [-0.0129,  0.0204, -0.0240]],

         [[ 0.0018, -0.0057,  0.0034],
          [-0.0162, -0.0211, -0.0169],
          [ 0.0234,  0.0018, -0.0021]],

         [[ 0.0260,  0.0260,  0.0292],
          [-0.0160, -0.0016, -0.0166],
          [ 0.0028,  0.0247, -0.0246]]],


        [[[-0.0165,  0.0059, -0.0036],
          [-0.0013, -0.0157,  0.0205],
          [-0.0119,  0.0196, -0.0023]],

         [[-0.0176,  0.0253,  0.0012],
          [-0.0260, -0.0063,  0.0135],
          [ 0.0082,  0.0258,  0.0113]],

         [[ 0.0293, -0.0288, -0.0283],
          [ 0.0142,  0.0089, -0.0072],
          [-0.0269, -0.0181, -0.0267]],

         ...,

         [[-0.0135,  0.0115,  0.0202],
          [ 0.0055,  0.0260, -0.0036],
          [-0.0057, -0.0032,  0.0250]],

         [[-0.0113,  0.0042, -0.0097],
          [-0.0070,  0.0202,  0.0172],
          [ 0.0160, -0.0180, -0.0260]],

         [[ 0.0083,  0.0221, -0.0098],
          [ 0.0003, -0.0254, -0.0198],
          [-0.0162,  0.0057, -0.0020]]],


        ...,


        [[[ 0.0169, -0.0013, -0.0112],
          [ 0.0133,  0.0193, -0.0112],
          [-0.0033, -0.0132,  0.0160]],

         [[ 0.0047, -0.0133,  0.0229],
          [-0.0220,  0.0183, -0.0128],
          [ 0.0022,  0.0286, -0.0045]],

         [[ 0.0096,  0.0287,  0.0134],
          [ 0.0117,  0.0035,  0.0205],
          [ 0.0081,  0.0002, -0.0162]],

         ...,

         [[-0.0002, -0.0180,  0.0148],
          [ 0.0061,  0.0125,  0.0242],
          [ 0.0264, -0.0047, -0.0005]],

         [[-0.0104, -0.0159,  0.0065],
          [-0.0179,  0.0089,  0.0175],
          [ 0.0174,  0.0091,  0.0230]],

         [[ 0.0185,  0.0011,  0.0270],
          [-0.0271,  0.0022,  0.0024],
          [-0.0117, -0.0103,  0.0164]]],


        [[[-0.0189, -0.0124, -0.0061],
          [-0.0011,  0.0229, -0.0225],
          [-0.0145, -0.0117, -0.0054]],

         [[-0.0208,  0.0079, -0.0060],
          [ 0.0120,  0.0253,  0.0022],
          [-0.0111,  0.0174, -0.0201]],

         [[-0.0097,  0.0275, -0.0045],
          [ 0.0040, -0.0260,  0.0116],
          [ 0.0236,  0.0226,  0.0025]],

         ...,

         [[ 0.0127, -0.0224,  0.0199],
          [-0.0104, -0.0294,  0.0151],
          [ 0.0219,  0.0174,  0.0167]],

         [[-0.0023, -0.0035,  0.0217],
          [ 0.0288, -0.0198,  0.0191],
          [-0.0036, -0.0234,  0.0079]],

         [[ 0.0161, -0.0229,  0.0197],
          [-0.0069, -0.0265, -0.0058],
          [ 0.0068,  0.0209,  0.0118]]],


        [[[-0.0003,  0.0181, -0.0269],
          [ 0.0027,  0.0155,  0.0074],
          [ 0.0050,  0.0124,  0.0259]],

         [[ 0.0255,  0.0146, -0.0278],
          [-0.0050,  0.0013, -0.0053],
          [ 0.0121,  0.0143,  0.0068]],

         [[-0.0292,  0.0137,  0.0094],
          [-0.0274, -0.0097, -0.0209],
          [ 0.0156, -0.0016,  0.0235]],

         ...,

         [[ 0.0004,  0.0022,  0.0031],
          [-0.0066, -0.0212, -0.0138],
          [ 0.0005, -0.0273,  0.0216]],

         [[ 0.0194,  0.0198,  0.0067],
          [ 0.0260, -0.0184,  0.0059],
          [ 0.0283, -0.0011,  0.0293]],

         [[-0.0216,  0.0242, -0.0223],
          [ 0.0222,  0.0165,  0.0077],
          [ 0.0035,  0.0010, -0.0003]]]], device='cuda:0', requires_grad=True)
parameters of the network conv3.bias 
 torch.Size([64]) 
 True 
 tensor([-3.1273e-04, -1.4637e-02,  2.0053e-04, -2.4784e-02, -2.9253e-02,
        -2.8159e-02, -2.8806e-02, -1.3179e-02,  3.6388e-03,  2.2820e-02,
         1.4323e-02, -1.6214e-02, -9.3477e-03,  2.0256e-02,  2.0427e-02,
        -2.3403e-02,  2.1518e-02,  2.7202e-02, -2.1140e-02, -2.2416e-02,
         1.6927e-02,  2.7892e-03, -1.8195e-02,  9.1169e-03, -2.4436e-02,
        -2.6694e-02,  1.6376e-03,  3.4241e-03,  1.4606e-02,  1.8513e-02,
         2.1379e-02, -2.3627e-02, -2.8357e-03,  2.7635e-02,  2.1516e-02,
        -2.2612e-02, -2.9103e-02, -1.3561e-02, -1.8853e-02,  1.7295e-02,
        -1.1486e-02,  1.7455e-02, -9.4098e-03, -2.6477e-02, -2.6390e-02,
        -2.2300e-02, -2.0735e-02, -2.9066e-02,  1.1941e-02,  2.1821e-03,
         3.5337e-05,  3.7540e-03,  1.4408e-02, -5.9733e-03, -1.1317e-02,
         1.5782e-02,  1.9292e-02, -9.1746e-03, -1.3432e-02, -2.3183e-02,
        -1.9419e-02, -8.2164e-03,  5.1095e-03,  5.8413e-03], device='cuda:0') 
 Parameter containing:
tensor([-3.1273e-04, -1.4637e-02,  2.0053e-04, -2.4784e-02, -2.9253e-02,
        -2.8159e-02, -2.8806e-02, -1.3179e-02,  3.6388e-03,  2.2820e-02,
         1.4323e-02, -1.6214e-02, -9.3477e-03,  2.0256e-02,  2.0427e-02,
        -2.3403e-02,  2.1518e-02,  2.7202e-02, -2.1140e-02, -2.2416e-02,
         1.6927e-02,  2.7892e-03, -1.8195e-02,  9.1169e-03, -2.4436e-02,
        -2.6694e-02,  1.6376e-03,  3.4241e-03,  1.4606e-02,  1.8513e-02,
         2.1379e-02, -2.3627e-02, -2.8357e-03,  2.7635e-02,  2.1516e-02,
        -2.2612e-02, -2.9103e-02, -1.3561e-02, -1.8853e-02,  1.7295e-02,
        -1.1486e-02,  1.7455e-02, -9.4098e-03, -2.6477e-02, -2.6390e-02,
        -2.2300e-02, -2.0735e-02, -2.9066e-02,  1.1941e-02,  2.1821e-03,
         3.5337e-05,  3.7540e-03,  1.4408e-02, -5.9733e-03, -1.1317e-02,
         1.5782e-02,  1.9292e-02, -9.1746e-03, -1.3432e-02, -2.3183e-02,
        -1.9419e-02, -8.2164e-03,  5.1095e-03,  5.8413e-03], device='cuda:0',
       requires_grad=True)
parameters of the network fc1.weight 
 torch.Size([256, 667776]) 
 True 
 tensor([[ 0.0010, -0.0006, -0.0009,  ...,  0.0006,  0.0004,  0.0011],
        [ 0.0011, -0.0005, -0.0005,  ..., -0.0003,  0.0007, -0.0005],
        [-0.0003,  0.0002, -0.0003,  ..., -0.0007,  0.0002,  0.0010],
        ...,
        [-0.0012,  0.0004,  0.0007,  ..., -0.0011, -0.0001,  0.0002],
        [ 0.0006,  0.0007,  0.0007,  ...,  0.0006,  0.0003,  0.0007],
        [-0.0008, -0.0009,  0.0009,  ...,  0.0004,  0.0007,  0.0008]],
       device='cuda:0') 
 Parameter containing:
tensor([[ 0.0010, -0.0006, -0.0009,  ...,  0.0006,  0.0004,  0.0011],
        [ 0.0011, -0.0005, -0.0005,  ..., -0.0003,  0.0007, -0.0005],
        [-0.0003,  0.0002, -0.0003,  ..., -0.0007,  0.0002,  0.0010],
        ...,
        [-0.0012,  0.0004,  0.0007,  ..., -0.0011, -0.0001,  0.0002],
        [ 0.0006,  0.0007,  0.0007,  ...,  0.0006,  0.0003,  0.0007],
        [-0.0008, -0.0009,  0.0009,  ...,  0.0004,  0.0007,  0.0008]],
       device='cuda:0', requires_grad=True)
parameters of the network fc1.bias 
 torch.Size([256]) 
 True 
 tensor([ 1.0117e-03, -1.6984e-04, -3.8593e-04, -1.1785e-04,  9.0150e-04,
        -4.5413e-04, -1.1384e-03, -1.1702e-03,  1.4543e-04,  7.8961e-04,
        -3.1608e-04, -8.5837e-04, -2.0453e-04, -2.2644e-04, -6.9474e-04,
        -9.8051e-04,  8.6075e-04,  4.5066e-04,  1.1936e-03, -4.9594e-04,
        -1.0077e-03, -6.3765e-04, -4.4485e-04,  4.0519e-04,  9.8139e-04,
         4.0050e-04,  8.4002e-04, -5.2850e-04,  6.3617e-04, -5.2310e-04,
        -4.1544e-06,  9.1609e-05,  6.5270e-04, -1.1529e-03,  2.5241e-04,
        -2.3688e-04,  1.0036e-03,  1.0192e-03,  1.6165e-04, -9.8592e-04,
         1.0430e-03,  1.9899e-04, -5.3853e-04, -3.5893e-05, -1.8865e-04,
         1.1276e-03, -4.7074e-04,  9.1833e-04, -5.8314e-04,  8.7714e-04,
         6.7937e-04,  2.8673e-04, -8.7170e-04, -1.4066e-04, -1.8079e-04,
        -8.3728e-05,  4.6055e-04, -5.1836e-04, -3.0554e-04, -2.4098e-04,
        -3.7096e-04, -5.1685e-04,  9.7477e-04,  1.0740e-03, -5.9801e-04,
        -5.3320e-04, -8.5856e-04,  4.6745e-04, -1.0393e-03,  7.9757e-05,
         1.2225e-03, -1.1691e-03,  3.9461e-04, -7.0701e-04,  4.6337e-04,
         4.9792e-04,  1.2209e-03, -7.3808e-04, -4.0080e-05,  7.2369e-04,
         6.1089e-04, -1.2906e-04, -3.7432e-04,  2.7180e-04,  3.8530e-04,
        -4.3730e-04, -4.4311e-04,  1.0837e-04,  1.1055e-03,  3.3911e-05,
        -1.0184e-03,  9.2945e-04, -5.4445e-04,  6.2695e-04,  5.5679e-04,
         5.2420e-04, -5.1932e-04, -4.4786e-04, -7.4780e-04, -6.0748e-04,
         5.7626e-04,  1.1685e-03,  1.9627e-04,  5.2037e-04, -1.6436e-04,
        -4.3882e-04, -1.1939e-03, -6.9809e-04,  9.5679e-04,  4.5191e-04,
        -5.9557e-04, -7.0720e-04,  2.3639e-04,  9.0626e-04,  6.4073e-04,
         8.4998e-04,  5.1419e-04, -6.9623e-04, -7.7245e-04,  6.6941e-04,
         5.5253e-04,  2.0084e-04, -1.0203e-03,  9.0385e-05, -4.6500e-04,
        -2.2733e-04,  2.4079e-04, -2.9113e-06, -4.9611e-04, -6.6898e-04,
        -6.1157e-04,  1.0147e-03, -7.9054e-04,  4.2694e-04, -1.1815e-03,
         1.0879e-03, -5.5308e-04,  5.5734e-04, -1.0080e-03,  1.1974e-03,
        -8.5394e-04,  7.8110e-04, -1.1206e-03, -8.5908e-04, -4.1935e-04,
         5.8000e-05,  1.0935e-03,  9.5612e-04, -2.2393e-04, -9.8889e-04,
         8.0974e-04, -9.0161e-04, -1.1074e-03,  1.2382e-04, -5.7875e-04,
         2.4336e-04,  3.5735e-04,  1.1425e-03,  1.2138e-03,  1.0203e-03,
        -8.4400e-04,  1.6798e-04,  8.4680e-04,  1.9263e-05, -1.1019e-03,
        -2.5394e-04,  2.2948e-05,  1.0285e-03,  8.9312e-04, -6.5632e-04,
         9.8496e-04, -9.4095e-04, -5.6761e-04,  2.4116e-04,  4.7426e-04,
        -6.7041e-04,  1.7466e-04,  6.5158e-04, -8.1611e-04, -9.0341e-04,
         1.2231e-03, -6.6890e-04, -4.2581e-04, -1.0999e-03, -1.0525e-03,
         2.0624e-05,  7.8540e-05, -1.1695e-03,  9.3341e-06, -9.2912e-04,
         8.7632e-05, -3.2736e-04,  7.4054e-04, -1.1367e-03,  7.2565e-04,
         4.7324e-04,  1.0275e-04,  1.2208e-03,  7.8553e-04,  1.1157e-04,
        -9.2396e-04,  1.1899e-03,  4.4954e-04,  1.9441e-04, -6.3532e-04,
         8.2607e-04,  8.2158e-04,  7.7977e-05, -5.6048e-04, -7.8339e-04,
        -9.8075e-04, -6.4141e-04, -1.7449e-04,  6.7883e-04, -1.0157e-04,
         4.5477e-04, -1.2157e-03,  1.0686e-03, -2.1507e-04, -5.2854e-04,
        -6.9667e-05,  1.1135e-03,  1.2033e-03, -2.5455e-04,  2.6992e-04,
         2.6883e-04,  1.8086e-05,  1.1500e-03, -9.3793e-04,  7.7454e-04,
         4.6445e-04, -1.1283e-03,  2.0270e-04,  9.5847e-04,  1.0090e-03,
         9.5474e-04,  9.8549e-04, -3.2468e-04,  3.1913e-04,  1.1418e-03,
        -1.0240e-04, -9.4023e-04, -1.1817e-03,  7.5926e-04, -6.9937e-04,
        -6.2832e-06, -4.7047e-04,  4.3060e-04, -1.7910e-04,  1.2054e-03,
         4.0652e-04,  2.5624e-04, -1.9407e-04,  9.1942e-04, -7.3830e-04,
        -3.5643e-04], device='cuda:0') 
 Parameter containing:
tensor([ 1.0117e-03, -1.6984e-04, -3.8593e-04, -1.1785e-04,  9.0150e-04,
        -4.5413e-04, -1.1384e-03, -1.1702e-03,  1.4543e-04,  7.8961e-04,
        -3.1608e-04, -8.5837e-04, -2.0453e-04, -2.2644e-04, -6.9474e-04,
        -9.8051e-04,  8.6075e-04,  4.5066e-04,  1.1936e-03, -4.9594e-04,
        -1.0077e-03, -6.3765e-04, -4.4485e-04,  4.0519e-04,  9.8139e-04,
         4.0050e-04,  8.4002e-04, -5.2850e-04,  6.3617e-04, -5.2310e-04,
        -4.1544e-06,  9.1609e-05,  6.5270e-04, -1.1529e-03,  2.5241e-04,
        -2.3688e-04,  1.0036e-03,  1.0192e-03,  1.6165e-04, -9.8592e-04,
         1.0430e-03,  1.9899e-04, -5.3853e-04, -3.5893e-05, -1.8865e-04,
         1.1276e-03, -4.7074e-04,  9.1833e-04, -5.8314e-04,  8.7714e-04,
         6.7937e-04,  2.8673e-04, -8.7170e-04, -1.4066e-04, -1.8079e-04,
        -8.3728e-05,  4.6055e-04, -5.1836e-04, -3.0554e-04, -2.4098e-04,
        -3.7096e-04, -5.1685e-04,  9.7477e-04,  1.0740e-03, -5.9801e-04,
        -5.3320e-04, -8.5856e-04,  4.6745e-04, -1.0393e-03,  7.9757e-05,
         1.2225e-03, -1.1691e-03,  3.9461e-04, -7.0701e-04,  4.6337e-04,
         4.9792e-04,  1.2209e-03, -7.3808e-04, -4.0080e-05,  7.2369e-04,
         6.1089e-04, -1.2906e-04, -3.7432e-04,  2.7180e-04,  3.8530e-04,
        -4.3730e-04, -4.4311e-04,  1.0837e-04,  1.1055e-03,  3.3911e-05,
        -1.0184e-03,  9.2945e-04, -5.4445e-04,  6.2695e-04,  5.5679e-04,
         5.2420e-04, -5.1932e-04, -4.4786e-04, -7.4780e-04, -6.0748e-04,
         5.7626e-04,  1.1685e-03,  1.9627e-04,  5.2037e-04, -1.6436e-04,
        -4.3882e-04, -1.1939e-03, -6.9809e-04,  9.5679e-04,  4.5191e-04,
        -5.9557e-04, -7.0720e-04,  2.3639e-04,  9.0626e-04,  6.4073e-04,
         8.4998e-04,  5.1419e-04, -6.9623e-04, -7.7245e-04,  6.6941e-04,
         5.5253e-04,  2.0084e-04, -1.0203e-03,  9.0385e-05, -4.6500e-04,
        -2.2733e-04,  2.4079e-04, -2.9113e-06, -4.9611e-04, -6.6898e-04,
        -6.1157e-04,  1.0147e-03, -7.9054e-04,  4.2694e-04, -1.1815e-03,
         1.0879e-03, -5.5308e-04,  5.5734e-04, -1.0080e-03,  1.1974e-03,
        -8.5394e-04,  7.8110e-04, -1.1206e-03, -8.5908e-04, -4.1935e-04,
         5.8000e-05,  1.0935e-03,  9.5612e-04, -2.2393e-04, -9.8889e-04,
         8.0974e-04, -9.0161e-04, -1.1074e-03,  1.2382e-04, -5.7875e-04,
         2.4336e-04,  3.5735e-04,  1.1425e-03,  1.2138e-03,  1.0203e-03,
        -8.4400e-04,  1.6798e-04,  8.4680e-04,  1.9263e-05, -1.1019e-03,
        -2.5394e-04,  2.2948e-05,  1.0285e-03,  8.9312e-04, -6.5632e-04,
         9.8496e-04, -9.4095e-04, -5.6761e-04,  2.4116e-04,  4.7426e-04,
        -6.7041e-04,  1.7466e-04,  6.5158e-04, -8.1611e-04, -9.0341e-04,
         1.2231e-03, -6.6890e-04, -4.2581e-04, -1.0999e-03, -1.0525e-03,
         2.0624e-05,  7.8540e-05, -1.1695e-03,  9.3341e-06, -9.2912e-04,
         8.7632e-05, -3.2736e-04,  7.4054e-04, -1.1367e-03,  7.2565e-04,
         4.7324e-04,  1.0275e-04,  1.2208e-03,  7.8553e-04,  1.1157e-04,
        -9.2396e-04,  1.1899e-03,  4.4954e-04,  1.9441e-04, -6.3532e-04,
         8.2607e-04,  8.2158e-04,  7.7977e-05, -5.6048e-04, -7.8339e-04,
        -9.8075e-04, -6.4141e-04, -1.7449e-04,  6.7883e-04, -1.0157e-04,
         4.5477e-04, -1.2157e-03,  1.0686e-03, -2.1507e-04, -5.2854e-04,
        -6.9667e-05,  1.1135e-03,  1.2033e-03, -2.5455e-04,  2.6992e-04,
         2.6883e-04,  1.8086e-05,  1.1500e-03, -9.3793e-04,  7.7454e-04,
         4.6445e-04, -1.1283e-03,  2.0270e-04,  9.5847e-04,  1.0090e-03,
         9.5474e-04,  9.8549e-04, -3.2468e-04,  3.1913e-04,  1.1418e-03,
        -1.0240e-04, -9.4023e-04, -1.1817e-03,  7.5926e-04, -6.9937e-04,
        -6.2832e-06, -4.7047e-04,  4.3060e-04, -1.7910e-04,  1.2054e-03,
         4.0652e-04,  2.5624e-04, -1.9407e-04,  9.1942e-04, -7.3830e-04,
        -3.5643e-04], device='cuda:0', requires_grad=True)
parameters of the network fc2.weight 
 torch.Size([128, 256]) 
 True 
 tensor([[-0.0339, -0.0135,  0.0077,  ..., -0.0043, -0.0478,  0.0147],
        [ 0.0089, -0.0219,  0.0585,  ...,  0.0264,  0.0249, -0.0351],
        [ 0.0047,  0.0565, -0.0429,  ..., -0.0345,  0.0204,  0.0408],
        ...,
        [ 0.0108,  0.0312, -0.0539,  ..., -0.0233, -0.0472, -0.0105],
        [ 0.0387, -0.0268, -0.0491,  ...,  0.0415,  0.0437, -0.0423],
        [-0.0083,  0.0144,  0.0533,  ..., -0.0021,  0.0193, -0.0480]],
       device='cuda:0') 
 Parameter containing:
tensor([[-0.0339, -0.0135,  0.0077,  ..., -0.0043, -0.0478,  0.0147],
        [ 0.0089, -0.0219,  0.0585,  ...,  0.0264,  0.0249, -0.0351],
        [ 0.0047,  0.0565, -0.0429,  ..., -0.0345,  0.0204,  0.0408],
        ...,
        [ 0.0108,  0.0312, -0.0539,  ..., -0.0233, -0.0472, -0.0105],
        [ 0.0387, -0.0268, -0.0491,  ...,  0.0415,  0.0437, -0.0423],
        [-0.0083,  0.0144,  0.0533,  ..., -0.0021,  0.0193, -0.0480]],
       device='cuda:0', requires_grad=True)
parameters of the network fc2.bias 
 torch.Size([128]) 
 True 
 tensor([ 0.0489, -0.0537,  0.0301,  0.0410,  0.0007,  0.0262, -0.0199,  0.0478,
         0.0045,  0.0330, -0.0217, -0.0180, -0.0423,  0.0531, -0.0175,  0.0244,
        -0.0176, -0.0377, -0.0023, -0.0283,  0.0276,  0.0594,  0.0045,  0.0486,
         0.0193, -0.0097, -0.0420, -0.0178,  0.0610, -0.0337,  0.0128, -0.0402,
         0.0372, -0.0132, -0.0600, -0.0312, -0.0031,  0.0330,  0.0344, -0.0183,
        -0.0474, -0.0077, -0.0524,  0.0530, -0.0550, -0.0456, -0.0197, -0.0498,
         0.0611, -0.0444,  0.0067, -0.0012,  0.0372,  0.0206,  0.0114,  0.0038,
         0.0128, -0.0196, -0.0220, -0.0364,  0.0194, -0.0540, -0.0353,  0.0012,
        -0.0005,  0.0259,  0.0228, -0.0538,  0.0500,  0.0521,  0.0269,  0.0294,
         0.0452,  0.0525, -0.0111, -0.0494, -0.0264,  0.0114,  0.0480,  0.0246,
        -0.0498,  0.0538,  0.0083,  0.0056,  0.0462,  0.0115,  0.0482, -0.0118,
         0.0443,  0.0191,  0.0158, -0.0422,  0.0456, -0.0022,  0.0431, -0.0284,
        -0.0078,  0.0174, -0.0289, -0.0075, -0.0438, -0.0362, -0.0218,  0.0365,
        -0.0290,  0.0553,  0.0124,  0.0168,  0.0078, -0.0543, -0.0469,  0.0469,
        -0.0452,  0.0537,  0.0061,  0.0542, -0.0478, -0.0179, -0.0129, -0.0188,
        -0.0385,  0.0346,  0.0527,  0.0516,  0.0547, -0.0508, -0.0005, -0.0540],
       device='cuda:0') 
 Parameter containing:
tensor([ 0.0489, -0.0537,  0.0301,  0.0410,  0.0007,  0.0262, -0.0199,  0.0478,
         0.0045,  0.0330, -0.0217, -0.0180, -0.0423,  0.0531, -0.0175,  0.0244,
        -0.0176, -0.0377, -0.0023, -0.0283,  0.0276,  0.0594,  0.0045,  0.0486,
         0.0193, -0.0097, -0.0420, -0.0178,  0.0610, -0.0337,  0.0128, -0.0402,
         0.0372, -0.0132, -0.0600, -0.0312, -0.0031,  0.0330,  0.0344, -0.0183,
        -0.0474, -0.0077, -0.0524,  0.0530, -0.0550, -0.0456, -0.0197, -0.0498,
         0.0611, -0.0444,  0.0067, -0.0012,  0.0372,  0.0206,  0.0114,  0.0038,
         0.0128, -0.0196, -0.0220, -0.0364,  0.0194, -0.0540, -0.0353,  0.0012,
        -0.0005,  0.0259,  0.0228, -0.0538,  0.0500,  0.0521,  0.0269,  0.0294,
         0.0452,  0.0525, -0.0111, -0.0494, -0.0264,  0.0114,  0.0480,  0.0246,
        -0.0498,  0.0538,  0.0083,  0.0056,  0.0462,  0.0115,  0.0482, -0.0118,
         0.0443,  0.0191,  0.0158, -0.0422,  0.0456, -0.0022,  0.0431, -0.0284,
        -0.0078,  0.0174, -0.0289, -0.0075, -0.0438, -0.0362, -0.0218,  0.0365,
        -0.0290,  0.0553,  0.0124,  0.0168,  0.0078, -0.0543, -0.0469,  0.0469,
        -0.0452,  0.0537,  0.0061,  0.0542, -0.0478, -0.0179, -0.0129, -0.0188,
        -0.0385,  0.0346,  0.0527,  0.0516,  0.0547, -0.0508, -0.0005, -0.0540],
       device='cuda:0', requires_grad=True)
parameters of the network fc3.weight 
 torch.Size([64, 128]) 
 True 
 tensor([[-0.0603,  0.0574, -0.0725,  ...,  0.0650, -0.0732,  0.0208],
        [ 0.0752,  0.0226, -0.0546,  ..., -0.0117, -0.0531, -0.0738],
        [-0.0279, -0.0207,  0.0658,  ...,  0.0480,  0.0879, -0.0087],
        ...,
        [-0.0488,  0.0294,  0.0037,  ..., -0.0586,  0.0643, -0.0093],
        [-0.0197,  0.0421,  0.0544,  ...,  0.0466,  0.0016, -0.0765],
        [ 0.0880, -0.0680,  0.0256,  ...,  0.0842,  0.0529,  0.0571]],
       device='cuda:0') 
 Parameter containing:
tensor([[-0.0603,  0.0574, -0.0725,  ...,  0.0650, -0.0732,  0.0208],
        [ 0.0752,  0.0226, -0.0546,  ..., -0.0117, -0.0531, -0.0738],
        [-0.0279, -0.0207,  0.0658,  ...,  0.0480,  0.0879, -0.0087],
        ...,
        [-0.0488,  0.0294,  0.0037,  ..., -0.0586,  0.0643, -0.0093],
        [-0.0197,  0.0421,  0.0544,  ...,  0.0466,  0.0016, -0.0765],
        [ 0.0880, -0.0680,  0.0256,  ...,  0.0842,  0.0529,  0.0571]],
       device='cuda:0', requires_grad=True)
parameters of the network fc3.bias 
 torch.Size([64]) 
 True 
 tensor([ 0.0412,  0.0801, -0.0768, -0.0345,  0.0707, -0.0589,  0.0686, -0.0349,
        -0.0367,  0.0164, -0.0386,  0.0165, -0.0593, -0.0694,  0.0540, -0.0020,
         0.0565, -0.0271,  0.0483, -0.0039,  0.0666, -0.0404,  0.0471,  0.0178,
        -0.0633,  0.0298,  0.0832,  0.0586,  0.0085, -0.0341, -0.0701, -0.0738,
         0.0097, -0.0741,  0.0077,  0.0837,  0.0164,  0.0844,  0.0372,  0.0167,
         0.0704,  0.0086, -0.0628, -0.0872, -0.0158,  0.0738, -0.0439,  0.0015,
         0.0229, -0.0359, -0.0492, -0.0497,  0.0431,  0.0694, -0.0668, -0.0376,
         0.0438,  0.0167,  0.0603,  0.0469,  0.0083, -0.0036, -0.0163,  0.0537],
       device='cuda:0') 
 Parameter containing:
tensor([ 0.0412,  0.0801, -0.0768, -0.0345,  0.0707, -0.0589,  0.0686, -0.0349,
        -0.0367,  0.0164, -0.0386,  0.0165, -0.0593, -0.0694,  0.0540, -0.0020,
         0.0565, -0.0271,  0.0483, -0.0039,  0.0666, -0.0404,  0.0471,  0.0178,
        -0.0633,  0.0298,  0.0832,  0.0586,  0.0085, -0.0341, -0.0701, -0.0738,
         0.0097, -0.0741,  0.0077,  0.0837,  0.0164,  0.0844,  0.0372,  0.0167,
         0.0704,  0.0086, -0.0628, -0.0872, -0.0158,  0.0738, -0.0439,  0.0015,
         0.0229, -0.0359, -0.0492, -0.0497,  0.0431,  0.0694, -0.0668, -0.0376,
         0.0438,  0.0167,  0.0603,  0.0469,  0.0083, -0.0036, -0.0163,  0.0537],
       device='cuda:0', requires_grad=True)
parameters of the network fc4.weight 
 torch.Size([6796, 64]) 
 True 
 tensor([[-0.0609, -0.0327,  0.1212,  ...,  0.0467,  0.1098, -0.0598],
        [-0.1225, -0.1177, -0.0928,  ...,  0.0396,  0.0753,  0.0182],
        [-0.1004, -0.0245,  0.0882,  ..., -0.0650,  0.1000, -0.0323],
        ...,
        [ 0.1113,  0.1144,  0.0607,  ..., -0.1169,  0.0444, -0.0521],
        [-0.0840, -0.0195,  0.0717,  ...,  0.0680,  0.0085, -0.0328],
        [-0.0153, -0.0568, -0.0668,  ..., -0.0133,  0.0526, -0.1163]],
       device='cuda:0') 
 Parameter containing:
tensor([[-0.0609, -0.0327,  0.1212,  ...,  0.0467,  0.1098, -0.0598],
        [-0.1225, -0.1177, -0.0928,  ...,  0.0396,  0.0753,  0.0182],
        [-0.1004, -0.0245,  0.0882,  ..., -0.0650,  0.1000, -0.0323],
        ...,
        [ 0.1113,  0.1144,  0.0607,  ..., -0.1169,  0.0444, -0.0521],
        [-0.0840, -0.0195,  0.0717,  ...,  0.0680,  0.0085, -0.0328],
        [-0.0153, -0.0568, -0.0668,  ..., -0.0133,  0.0526, -0.1163]],
       device='cuda:0', requires_grad=True)
parameters of the network fc4.bias 
 torch.Size([6796]) 
 True 
 tensor([-0.0382, -0.1030, -0.1091,  ..., -0.0935, -0.0111,  0.1035],
       device='cuda:0') 
 Parameter containing:
tensor([-0.0382, -0.1030, -0.1091,  ..., -0.0935, -0.0111,  0.1035],
       device='cuda:0', requires_grad=True)

Passing event 10 from the network before training input tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) 
result1: tensor([[0.4850, 0.4710, 0.4687,  ..., 0.4824, 0.4935, 0.5268],
        [0.4850, 0.4710, 0.4687,  ..., 0.4824, 0.4934, 0.5269],
        [0.4851, 0.4710, 0.4687,  ..., 0.4823, 0.4935, 0.5268],
        ...,
        [0.4851, 0.4710, 0.4687,  ..., 0.4824, 0.4935, 0.5268],
        [0.4851, 0.4710, 0.4687,  ..., 0.4823, 0.4935, 0.5269],
        [0.4849, 0.4710, 0.4687,  ..., 0.4823, 0.4935, 0.5268]],
       device='cuda:0', grad_fn=<SigmoidBackward0>) 
result1.shape: torch.Size([20, 6796])

Passing two random events from the network before training 
result1: tensor([[0.4850, 0.4710, 0.4687,  ..., 0.4824, 0.4935, 0.5268],
        [0.4850, 0.4710, 0.4687,  ..., 0.4824, 0.4934, 0.5269],
        [0.4851, 0.4710, 0.4687,  ..., 0.4823, 0.4935, 0.5268],
        ...,
        [0.4851, 0.4710, 0.4687,  ..., 0.4824, 0.4935, 0.5268],
        [0.4851, 0.4710, 0.4687,  ..., 0.4823, 0.4935, 0.5269],
        [0.4849, 0.4710, 0.4687,  ..., 0.4823, 0.4935, 0.5268]],
       device='cuda:0', grad_fn=<SigmoidBackward0>) 
result1.shape: torch.Size([20, 6796]) 
input: [[0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]
 [0. 0. 0. ... 0. 0. 0.]]
Traceback (most recent call last):
  File "/hpcfs/bes/mlgpu/hoseinkk/MLTracking/otherparticles/pppipi/pyt_pppipi_cnn_1/./Model.py", line 130, in <module>
    fig.colorbar(ax4.matshow(traincnnpppipi_rectangle[EvBBTr][0], aspect=2, vmin=0, vmax=1, extent=[0, 288, 0, 43], origin='lower')\
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/matplotlib/axes/_axes.py", line 7931, in matshow
    im = self.imshow(Z, **kw)
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/matplotlib/__init__.py", line 1361, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/matplotlib/axes/_axes.py", line 5609, in imshow
    im.set_data(X)
  File "/hpcfs/bes/mlgpu/hoseinkk/Miniconda3/envs/dgl1/lib/python3.9/site-packages/matplotlib/image.py", line 709, in set_data
    raise TypeError("Invalid shape {} for image data"
TypeError: Invalid shape (288,) for image data

real	0m15.346s
user	0m9.634s
sys	0m3.934s
